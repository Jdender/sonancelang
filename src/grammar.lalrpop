use crate::parse::*;
use std::str::FromStr;

grammar;

match {
    "func", "return", "->", ";",

    "main", "I32",

    "(", ")", "{", "}", // Parens

    "-", "!", // Operators

    r"[0-9]+" => INT_LITERAL,
}

#[inline]
Boxed<T>: Box<T> = T => Box::new(<>);

pub File: File =
    "func" "main" "(" ")" "->" "I32" "{"
        "return" <Expression> ";"
    "}" => File(<>);

pub Expression: Expression = {
    IntLiteral => Expression::Literal(<>),
    UnaryOp Boxed<Expression> => Expression::UnaryOp(<>),
}

UnaryOp: UnaryOp = {
    "-" => UnaryOp::Negate,
    "!" => UnaryOp::BooleanNot,
}

pub IntLiteral: i32 = INT_LITERAL => i32::from_str(<>).unwrap();
