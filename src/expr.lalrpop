use std::str::FromStr;
use crate::parser::*;

grammar;

pub Expr: Box<Expr> = {
    Expr ExprOp Factor => Box::new(Expr::Operation(<>)),
    Factor,
};

ExprOp: Opcode = {
    "+" => Opcode::Add,
    "-" => Opcode::Sub,
};

Factor: Box<Expr> = {
    Factor FactorOp Term => Box::new(Expr::Operation(<>)),
    Term,
};

FactorOp: Opcode = {
    "*" => Opcode::Mul,
    "/" => Opcode::Div,
};

Term: Box<Expr> = {
    Literal => Box::new(Expr::Literal(<>)), // (4)
    "(" <Expr> ")"
};

Literal: Literal = {
    r"[+-]?\d+" => Literal::Int(i32::from_str(<>).unwrap()),
    r"[+-]?(\d+\.\d*|\.\d+)" => Literal::Float(f32::from_str(<>).unwrap()),
};
