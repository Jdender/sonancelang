import std::package -> module::item;
import package std::package;
import module module::item;

module SubModule {
    export type Foo = u32;
}

const FOO_BAR = "FOO BAR";

func main() -> void {
    foo().bar();
}

type Foo = u32;
type unique Bar = String;

struct FieldStruct {
    foo: Foo,
    bar: Bar,
}
struct TupleStruct(Foo, Bar);

union FieldUnion {
    Foo: Foo,
    Bar: Bar,
}
union TupleUnion(Foo, Bar);

impl Colors {
    func new() -> Self {
        Self:Red
    }
}

trait ToString {
    func to_string(self) -> String;
}

impl ToString for Colors {
    func to_string(self) -> String {
        self
    }
}
